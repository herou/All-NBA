buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.24.4'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'jacoco-android'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.gmail.jorgegilcavazos.ballislife"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 75
        versionName "1.2.4.4"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENCE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    jacocoAndroidUnitTestReport {
        csv.enabled false
        html.enabled true
        xml.enabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def ANDROID_SUPPORT_VERSION = "25.3.1"
configurations.all {
    resolutionStrategy.force 'com.google.guava:guava:20.0'

    resolutionStrategy {
        eachDependency { details ->
            if (details.requested.group == 'com.android.support') {
                if (details.requested.name != 'multidex'
                        && details.requested.name != 'multidex-instrumentation') {
                    details.useVersion "${ANDROID_SUPPORT_VERSION}"
                }
            }
        }
    }
}

repositories {
    maven {
        url 'https://dl.bintray.com/drummer-aidan/maven'
    }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation 'com.android.support:support-v4:26.1.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:multidex:1.0.2'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'com.android.support:customtabs:26.1.0'
    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation 'com.google.firebase:firebase-messaging:11.8.0'
    implementation 'com.google.firebase:firebase-crash:11.8.0'
    implementation 'com.google.firebase:firebase-config:11.8.0'
    implementation 'com.google.firebase:firebase-firestore:11.8.0'
    implementation 'com.google.firebase:firebase-auth:11.8.0'
    implementation 'com.google.android.gms:play-services-ads:11.8.0'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.1.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:2.0.0'
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.jakewharton:butterknife:8.7.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'net.dean.jraw:JRAW:0.9.0'
    implementation 'com.google.dagger:dagger:2.11'
    implementation 'com.afollestad.material-dialogs:commons:0.9.4.2'
    implementation 'com.afollestad:easyvideoplayer:0.3.0'
    implementation 'com.hannesdorfmann.mosby:mvp:2.0.1'
    implementation 'com.jonathanfinerty.once:once:1.2.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation 'com.squareup.okhttp3:okhttp:3.8.0'
    implementation 'joda-time:joda-time:2.9.9'
    implementation 'com.android.billingclient:billing:1.0'
    implementation 'com.github.pchmn:MaterialChipsInput:1.0.8'
    implementation 'io.github.kobakei:ratethisapp:1.2.0'
    implementation 'de.aaronoe:rxfirestorekt:0.1.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.8.9'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.7.0'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    testDebugImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    testImplementation 'org.robolectric:robolectric:3.4'
    testImplementation 'org.robolectric:shadows-multidex:3.0'
    testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'
    implementation 'com.jakewharton.timber:timber:4.5.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation files('libs/YouTubeAndroidPlayerApi.jar')
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
}

task jacocoTestReport2(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/androidTest/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree], [kotlinDebugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'